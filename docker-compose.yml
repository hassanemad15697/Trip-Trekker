version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: trip-trekker
      POSTGRES_USER: trip-trekker
      POSTGRES_PASSWORD: trip-trekker
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # AMQP
      - "15672:15672"  # RabbitMQ Management UI
    networks:
      - app-network

#  auditing-service:
#    build:
#      context: ./auditing-service
#      dockerfile: Dockerfile
#    container_name: auditing-service
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#      - rabbitmq
#    networks:
#      - app-network

  authentication-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: authentication-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    networks:
      - app-network

  booking-service:
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    container_name: booking-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - app-network
#
#  external-api:
#    build:
#      context: ./external-api-service
#      dockerfile: Dockerfile
#    container_name: external-api
#    ports:
#      - "8083:8083"
#
#  flight-search:
#    build:
#      context: ./flight-search-service
#      dockerfile: Dockerfile
#    container_name: flight-search
#    ports:
#      - "8084:8084"
#    volumes:
#      - D:/Docker/Data/trip-trekker/flight-search:/app
#
#  hotel-search:
#    build:
#      context: ./hotel-search-service
#      dockerfile: Dockerfile
#    container_name: hotel-search
#    ports:
#      - "8085:8085"
#    volumes:
#      - D:/Docker/Data/trip-trekker/hotel-search:/app
#
#  notification-service:
#    build:
#      context: ./notification-service
#      dockerfile: Dockerfile
#    container_name: notification-service
#    ports:
#      - "8086:8086"
#    volumes:
#      - D:/Docker/Data/trip-trekker/notification-service:/app
#    depends_on:
#      - postgres
#      - rabbitmq
#
#  payment-service:
#    build:
#      context: ./payment-service
#      dockerfile: Dockerfile
#    container_name: payment-service
#    ports:
#      - "8087:8087"
#    volumes:
#      - D:/Docker/Data/trip-trekker/payment-service:/app
#    depends_on:
#      - postgres
#      - rabbitmq
#
  validation-service:
    build:
      context: ./validation-service
      dockerfile: Dockerfile
    container_name: validation-service
    ports:
      - "8088:8088"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

